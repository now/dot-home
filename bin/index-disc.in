#! @ZSHELL@

# TODO Depend on a find and xargs that support -print0 and -0/-P.

progname=`expr "//$0" : '.*/\(.*\)'`
sha256sum=@SHA256SUM@
discs=~/Documents/Google\ Drive/Discs
lockdir=$discs/.discs.lock
pidfile=$lockdir/pid

warn () {
  printf '%s\n' "$progname: $*" >&2
}

warnunless () {
  if test $? -ne 0; then
    warn "$2: $1"
    return 1
  fi
}

die () {
  warn "$*"
  exit 1
}

dieunless () {
  test $? -ne 0 && die "$2: $1"
}

writesha256sumsandeject () {
  tmp=$discs/$progname$$.tmp
  trap 'rm -f "$tmp"' 1 2 13 15
  { writesha256sums "$1" "$tmp" && eject "$1"; } ||
    { rm -f "$tmp"; return 1; }
}

writesha256sums () {
  if test -d "$1/VIDEO_TS"; then
    writesha256sumsin "`expr "//$1" : '//\(.*\)/.*'`" "$2"
  else
    writesha256sumsin "$1" "$2"
  fi
}

writesha256sumsin () {
  (cd "$1" &&
      find . -print0 | xargs -0 -n1 -P4 "$sha256sum" | sed 's,^./,,' | \
        sort -k2) > "$2" &&
    { lockandlabel "$1" "$2" || { rm -f "$2"; return 1 } }
}

lockandlabel () {
  chmod a-w "$2" &&
    lock &&
    { label "$2" "$1"
      e=$?
      warnunless "`rm -rf "$lockdir" 2>&1`" "can’t remove lock file" || return 1
      return $e }
}

lock () {
  while ! mkdir "$lockdir"; do
    pid=`cat "$pidfile"` || { warn "possibly stale lock directory: $lockdir"; return 1; }
    if kill -0 "$pid" >/dev/null 2>&1; then
      sleep 1
    else
      warnunless "`rm -f "$lock" 2>&1`" "can’t remove stale lock file" || return 1
    fi
  done
  echo $$ > "$pidfile"
  trap 'rm -rf "$lockdir"' 1 2 13 15
}

label () {
  last=`find "$discs" | sort -nr | sed -n -e '1s,.*/\(.*\)\.[^.]*$,\1,p' -e 1q` || return 1
  next=`expr $last + 1` || return 1
  label=`printf '%0.3d' $next` || return 1
  file=$discs/$label.sha256sum
  mv "$1" "$file" &&
    echo "label $2 as $label" ||
      { rm -f "$1" "$file"; return 1 }
}

eject () {
  diskutil list "$1" > /dev/null &&
    warnunless "`diskutil eject "$1" 2>&1`" "can’t eject disc"
}

dieunless "`@MKDIR_P@ "$discs" 2>&1`" "can’t create discs directory"

exitstatus=0
for mount in ${*:-.}; do
  writesh256sums "$mount" || exitstatus=1
done
exit $exitstatus
