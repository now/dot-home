#! @ZSHELL@

# TODO Depend on a find and xargs that support -print0 and -0/-P.

progname=`expr "//$0" : '.*/\(.*\)'`
sha256sum=@SHA256SUM@
discs=~/Documents/Google\ Drive/Discs

warn () {
  printf '%s\n' "$progname: $*" >&2
}

warnunless () {
  test $? -ne 0 && warn "$2: $1"
}

die () {
  warn "$*"
  exit 1
}

dieunless () {
  test $? -ne 0 && die "$2: $1"
}

withlock () {
  setopt localoptions localtraps
  local lock=$1
  shift

  until (setopt noclobber && print -r -- $$ > $lock) >& /dev/null; do
    if kill -0 "$(<$lock)" >& /dev/null; then
      sleep 1
    else
      dieunless "`rm -f "$lock" 2>&1`" "can’t remove stale lock file"
    fi
  done

  trap 'rm -f $lock; exit 130' INT
  trap 'rm -f $lock; exit 143' TERM
  $*
  retval=$?
  dieunless "`rm -f "$lock" 2>&1`" "can’t remove lock file"
  return $retval
}

withdiscsdir () {
  withlock $discs/.discs.lock $*
}

writesha256sums () {
  last=`find "$discs" | sort -nr | sed -n -e '1s,.*/\(.*\)\.[^.]*$,\1,p' -e 1q`
  next=`expr $last + 1`
  label=`printf '%0.3d' $next`
  file=$discs/$label.sha256sum
  ( umask $(($(umask) | 0200)) &&
      printf '%s' "$*" > "$file.tmp" ) &&
    mv "$file.tmp" "$file" &&
    echo "label $mount as $label" ||
      { rm -f "$file.tmp" "$file"; exitstatus=1; }
}

eject () {
  if diskutil list "$1" > /dev/null; then
    warnunless "`diskutil eject "$1" 2>&1`" "can’t eject disc"
  fi
}

dieunless "`@MKDIR_P@ "$discs" 2>&1`" "can’t create discs directory"

for mount in ${*:-.}; do
  target=$mount
  prefix=
  if test -d "$mount/VIDEO_TS"; then
    prefix=`expr "//$target" : '.*/\(.*\)'`/
    target=`expr "//$target" : '//\(.*\)/.*'`
  fi

  sha256sums=`cd "$target" && find . -print0 | xargs -0 -n1 -P4 "$sha256sum" | sort -k2` &&
    withdiscsdir writesha256sums "$sha256sums" &&
    eject "$mount"
done
