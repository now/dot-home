#! @ZSHELL@

if (( $# < 1 )); then
  print -r -- Usage: $(basename $0) [OPTION]... FILE...
  exit 1
fi

local -a opts files
while (( $# > 0 )); do
  case $1 in
    (--) shift; files+=($*); break ;;
    (-*)
      case $1 in
        (-s)
          opts+=($1 $2); shift 2 ;;
        (*)
          opts+=$1; shift ;;
      esac
      ;;
    (*) files+=$1; shift ;;
  esac
done

integer retval=0
for file in $files; do
  local txt=$file:r.txt
  if [[ -e $txt ]]; then
    print -r -- $(basename $0): $file: already re-encoded
    continue
  fi
  local filestamp=; filestamp=$(stat -t %Y%m%d%H%M.%S -f %Sm $file) || { retval=1; continue }
  local txttmp=; txttmp=$(mktemp "$(dirname $txt)/mov-re-encode.txt.XXXXXX") || { retval=1; continue }
  ffmpeg -loglevel error -y -i $file -f ffmetadata $txttmp || { retval=1; rm -f $txttmp; continue }
  local filetmp=; filetmp=$(mktemp "$(dirname $file)/mov-re-encode.mov.XXXXXX") || { rm -f $txttmp; retval=1; continue }
  # -s 852x480 \
  #  -b:v 1290k \
  # TODO ffmpeg doesn’t copy unknown metadata and doesn’t allow you to set arbitrary metadata, not in mov at least
  { ffmpeg \
    -loglevel error \
    -y \
    -i $file \
    -codec:a libmp3lame \
    -codec:v libx264 \
    -preset slow \
    -crf 22 \
    -f mov \
    -map_metadata 0 \
    "$opts[@]" \
    $filetmp &&
    touch -m -t $filestamp $filetmp &&
    mv $txttmp $txt } || { rm -f $txttmp $filetmp; retval=1; continue }
  mv $filetmp $file || { rm -f $txt $filetmp; retval=1; continue }
done
exit $retval
