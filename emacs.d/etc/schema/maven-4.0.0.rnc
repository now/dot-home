namespace a = 'http://relaxng.org/ns/compatibility/annotations/1.0'
default namespace pom = 'http://maven.apache.org/POM/4.0.0'

pom.any.element = element * { (attribute * { text } | text | pom.any.element)* }

start = pom.project

div {
  pom.project = element project { pom.project.attributes, pom.project.content }

  div {
    pom.project.attributes = empty

    div {
      pom.project.attributes &= pom.project.attributes.child.project.url.inherit.append.path?
      pom.project.attributes.child.project.url.inherit.append.path =
        attribute child.project.url.inherit.append.path { text }
    }
  }

  pom.project.content =
    pom.modelVersion? &
    pom.parent? &
    pom.groupId? &
    pom.artifactId? &
    pom.version? &
    pom.packaging? &
    pom.name? &
    pom.description? &
    pom.url? &
    pom.inceptionYear? &
    pom.organization? &
    pom.licenses? &
    pom.developers? &
    pom.contributors? &
    pom.mailingLists? &
    pom.prerequisites? &
    pom.modules? &
    pom.scm? &
    pom.issueManagement? &
    pom.ciManagement? &
    pom.distributionManagement? &
    pom.properties? &
    pom.dependencyManagement? &
    pom.dependencies? &
    pom.repositories? &
    pom.pluginRepositories? &
    pom.build? &
    pom.reports? &
    pom.reporting? &
    pom.profiles?
}

div {
  pom.modelVersion = element modelVersion { pom.modelVersion.attributes, pom.modelVersion.content }

  pom.modelVersion.attributes = empty

  pom.modelVersion.content = text
}

div {
  pom.parent = element parent { pom.parent.attributes, pom.parent.content }

  pom.parent.attributes = empty

  div {
    pom.parent.content = pom.groupId? & pom.artifactId? & pom.version?

    div {
      pom.parent.content &= pom.relativePath?
      pom.relativePath = element relativePath { pom.relativePath.attributes, pom.relativePath.content }

      pom.relativePath.attributes = empty

      pom.relativePath.content = text
    }
  }
}

div {
  pom.groupId = element groupId { pom.groupId.attributes, pom.groupId.content }

  pom.groupId.attributes = empty

  pom.groupId.content = text
}

div {
  pom.artifactId = element artifactId { pom.artifactId.attributes, pom.artifactId.content }

  pom.artifactId.attributes = empty

  pom.artifactId.content = text
}

div {
  pom.version = element version { pom.version.attributes, pom.version.content }

  pom.version.attributes = empty

  pom.version.content = text
}

div {
  pom.packaging = element packaging { pom.packaging.attributes, pom.packaging.content }

  pom.packaging.attributes = empty

  pom.packaging.content = text >> a:defaultValue = 'jar'
}

div {
  pom.name = element name { pom.name.attributes, pom.name.content }

  pom.name.attributes = empty

  pom.name.content = text
}

div {
  pom.description = element description { pom.description.attributes, pom.description.content }

  pom.description.attributes = empty

  pom.description.content = text
}

div {
  pom.url = element url { pom.url.attributes, pom.url.content }

  pom.url.attributes = empty

  pom.url.content = text
}

div {
  pom.inceptionYear = element inceptionYear { pom.inceptionYear.attributes, pom.inceptionYear.content }

  pom.inceptionYear.attributes = empty

  pom.inceptionYear.content = text
}

div {
  pom.organization = element organization { pom.organization.attributes, pom.organization.content }

  pom.organization.attributes = empty

  div {
    pom.organization.content = empty

    div {
      pom.organization.content &= pom.organization.content.name?
      pom.organization.content.name = pom.name
    }

    div {
      pom.organization.content &= pom.organization.content.url?
      pom.organization.content.url = pom.url
    }
  }
}

div {
  pom.licenses = element licenses { pom.licenses.attributes, pom.licenses.content }

  pom.licenses.attributes = empty

  pom.licenses.content = pom.license*
}

div {
  pom.license = element license { pom.license.attributes, pom.license.content }

  pom.license.attributes = empty

  div {
    pom.license.content = empty

    div {
      pom.license.content &= pom.license.content.name?
      pom.license.content.name = pom.name
    }

    div {
      pom.license.content &= pom.license.content.url?
      pom.license.content.url = pom.url
    }

    div {
      pom.license.content &= pom.distribution?

      pom.distribution = element distribution { pom.license.content.distribution.attributes, pom.license.content.distribution.content }

      pom.distribution.attributes = empty

      pom.distribution.content = text
    }

    div {
      pom.license.content &= pom.license.content.comments?

      pom.comments = element comments { pom.comments.attributes, pom.comments.content }

      pom.comments.attributes = empty

      pom.comments.content = text
    }
  }
}

div {
  pom.developers = element developers { pom.developers.attributes, pom.developers.content }

  pom.developers.attributes = empty

  div {
    pom.developers.content = pom.developer*

    div {
      pom.developer = element developer { pom.developer.attributes, pom.developer.content }

      pom.developer.attributes = empty

      pom.developer.content = pom.person-content
    }
  }
}

div {
  pom.contributors = element contributors { pom.contributors.attributes, pom.contributors.content }

  pom.contributors.attributes = empty

  div {
    pom.contributors.content = pom.contributor*

    div {
      pom.contributor = element contributor { pom.contributor.attributes, pom.contributor.content }

      pom.contributor.attributes = empty

      pom.contributor.content = pom.person-content
    }
  }
}

div {
  pom.mailingLists = element mailingLists { pom.mailingLists.attributes, pom.mailingLists.content }

  pom.mailingLists.attributes = empty

  div {
    pom.mailingList.content = pom.mailingList*

    div {
      pom.mailingList = element mailingList { pom.mailingList.attributes, pom.mailingList.content }

      pom.mailingList.attributes = empty

      div {
        pom.mailingList.content = empty

        div {
          pom.mailingList.content &= pom.mailingList.content.name?
          pom.mailingList.content.name = pom.name
        }

        div {
          pom.mailingList.content &= pom.subscribe?
          pom.subscribe = element subscribe { pom.subscribe.attributes, pom.subscribe.content }

          pom.subscribe.attributes = empty

          pom.subscribe.content = text
        }

        div {
          pom.mailingList.content &= pom.unsubscribe?
          pom.unsubscribe = element unsubscribe { pom.unsubscribe.attributes, pom.unsubscribe.content }

          pom.unsubscribe.attributes = empty

          pom.unsubscribe.content = text
        }

        div {
          pom.mailingList.content &= pom.post?
          pom.post = element post { pom.post.attributes, pom.post.content }

          pom.post.attributes = empty

          pom.post.content = text
        }

        div {
          pom.mailingList.content &= pom.archive?
          pom.archive = element archive { pom.archive.attributes, pom.archive.content }

          pom.archive.attributes = empty

          pom.archive.content = text
        }

        div {
          pom.otherArchives = element otherArchives { pom.otherArchives.attributes, pom.otherArchives.content }

          pom.otherArchives.attributes = empty

          pom.otherArchives.content = pom.otherArchive*

          div {
            pom.otherArchive = element otherArchive { pom.otherArchive.attributes, pom.otherArchive.content }

            pom.otherArchive.attributes = empty

            pom.otherArchive.content = text
          }
        }
      }
    }
  }
}

div {
  pom.prerequisites = element prerequisites { pom.prerequisites.attributes, pom.prerequisites.content }

  pom.prerequisites.attributes = 

  pom.prerequisites.content = 
}

div {
  pom.modules = element modules { pom.modules.attributes, pom.modules.content }

  pom.modules.attributes = empty

  pom.modules.content = pom.module*
}

div {
  pom.scm = element scm { pom.scm.attributes, pom.scm.content }

  pom.scm.attributes = empty

  div {
    pom.scm.content = empty?

    div {
      pom.scm.content &= pom.scm.content.url?
      pom.scm.content.url = pom.url
    }

    div {
      pom.scm.content &= pom.connection?
      pom.connection = element connection { pom.connection.attributes, pom.connection.content }

      pom.connection.attributes = empty

      pom.connection.content = text
    }

    div {
      pom.scm.content &= pom.developerConnection?
      pom.developerConnection = element developerConnection { pom.developerConnection.attributes, pom.developerConnection.content }

      pom.developerConnection.attributes = empty

      pom.developerConnection.content = text
    }

    div {
      pom.scm.content &= pom.tag?
      pom.tag = element tag { pom.tag.attributes, pom.tag.content }

      pom.tag.attributes = empty

      pom.tag.content = text >> [a:defaultValue = 'HEAD']
    }
  }
}

div {
  pom.issueManagement = element issueManagement { pom.issueManagement.attributes, pom.issueManagement.content }

  pom.issueManagement.attributes = 

  pom.issueManagement.content = 
}

div {
  pom.ciManagement = element ciManagement { pom.ciManagement.attributes, pom.ciManagement.content }

  pom.ciManagement.attributes = empty

  div {
    pom.ciManagement.content = empty

    div {
      pom.ciManagement.content &= pom.system?
      pom.system = element system { pom.system.attributes, pom.system.content }

      pom.system.attributes = empty

      pom.system.content = text
    }

    div {
      pom.ciManagement.content &= pom.ciManagement.content.url?
      pom.ciManagement.content.url = pom.url
    }

    div {
      pom.ciManagement.content &= pom.notifiers?
      pom.notifiers = element notifiers { pom.notifiers.attributes, pom.notifiers.content }

      pom.notifiers.attributes = empty

      pom.notifiers.content = pom.notifier*

      div {
        pom.notifier = element notifier { pom.notifier.attributes, pom.notifier.content }

        pom.notifier.attributes = empty

        div {
          pom.notifier.content = empty

          div {
            pom.notifier.content &= pom.type?
            pom.type = element type { pom.type.attributes, pom.type.content }

            pom.type.attributes = empty

            pom.type.content = text
          }

          div {
            pom.notifier.content &= pom.sendOnError?
            pom.sendOnError = element sendOnError { pom.sendOnError.attributes, pom.sendOnError.content }

            pom.sendOnError.attributes = empty

            pom.sendOnError.content = xsd:boolean >> a:defaultValue = 'true'
          }

          div {
            pom.notifier.content &= pom.sendOnFailure?
            pom.sendOnFailure = element sendOnFailure { pom.sendOnFailure.attributes, pom.sendOnFailure.content }

            pom.sendOnFailure.attributes = empty

            pom.sendOnFailure.content = xsd:boolean >> a:defaultValue = 'true'
          }

          div {
            pom.notifier.content &= pom.sendOnSuccess?
            pom.sendOnSuccess = element sendOnSuccess { pom.sendOnSuccess.attributes, pom.sendOnSuccess.content }

            pom.sendOnSuccess.attributes = empty

            pom.sendOnSuccess.content = xsd:boolean >> a:defaultValue = 'true'
          }

          div {
            pom.notifier.content &= pom.sendOnWarning?
            pom.sendOnWarning = element sendOnWarning { pom.sendOnWarning.attributes, pom.sendOnWarning.content }

            pom.sendOnWarning.attributes = empty

            pom.sendOnWarning.content = xsd:boolean >> a:defaultValue = 'true'
          }

          div {
            pom.notifier.content &= pom.address?
            pom.address = element address { pom.address.attributes, pom.address.content }

            pom.address.attributes = empty

            pom.address.content = string
          }

          div {
            pom.notifier.content &= pom.notifier.content.configuration?
            pom.notifier.content.configuration = element configuration { pom.notifier.content.configuration.attributes, pom.notifier.content.configuration.content }

            pom.notifier.content.configuration.attributes = empty

            pom.notifier.content.configuration.content = string
          }
        }
      }
    }
  }
}

div {
  pom.distributionManagement = element distributionManagement { pom.distributionManagement.attributes, pom.distributionManagement.content }

  pom.distributionManagement.attributes = empty

  div {
    pom.distributionManagement.content = empty

    div {
      pom.distributionManagement.content &= pom.distributionManagement.content.repository?
      pom.distributionManagement.content.repository = element repository { pom.distributionManagement.content.repository.attributes, pom.distributionManagement.content.repository.content }

      pom.distributionManagement.content.repository.attributes = empty

      pom.distributionManagement.content.repository.content = pom.deployment-repository.content
    }

    div {
      pom.distributionManagement.content &= pom.distributionManagement.content.snapshotRepository?
      pom.distributionManagement.content.snapshotRepository = element snapshotRepository { pom.distributionManagement.content.snapshotRepository.attributes, pom.distributionManagement.content.snapshotRepository.content }

      pom.distributionManagement.content.snapshotRepository.attributes = empty

      pom.distributionManagement.content.snapshotRepository.content = pom.deployment-repository.content
    }

    div {
      pom.distributionManagement.content &= pom.site?
      pom.site = element site { pom.site.attributes, pom.site.content }

      pom.site.attributes = pom.attributes.child.site.url.inherit.append.path?

      div {
        pom.site.content = empty

        div {
          pom.site.content &= pom.site.content.id?
          pom.site.content.id = pom.id
        }

        div {
          pom.site.content &= pom.site.content.name?
          pom.site.content.name = pom.name
        }

        div {
          pom.site.content &= pom.site.content.url?
          pom.site.content.url = pom.url
        }
      }
    }

    div {
      pom.distributionManagement.content &= pom.downloadUrl?
      pom.downloadUrl = element downloadUrl { pom.downloadUrl.attributes, pom.downloadUrl.content }

      pom.downloadUrl.attributes = empty

      pom.downloadUrl.content = text
    }

    div {
      pom.distributionManagement.content &= pom.relocation?
      pom.relocation = element relocation { pom.relocation.attributes, pom.relocation.content }

      pom.relocation.attributes = empty

      div {
        pom.relocation.content =
          pom.groupId? & pom.artifactId? & pom.version?

        div {
          pom.relocation.content &= pom.message?
          pom.message = element message { pom.message.attributes, pom.message.content }

          pom.message.attributes = empty

          pom.message.content = text
        }
      }
    }

    div {
      pom.distributionManagement.content &= pom.status?
      pom.status = element status { pom.status.attributes, pom.status.content }

      pom.status.attributes = empty

      pom.status.content = text
    }

    div {
      pom.deployment-repository.content = empty

      div {
        pom.deployment-repository.content &= pom.uniqueVersion?
        pom.uniqueVersion = element uniqueVersion { pom.uniqueVersion.attributes, pom.uniqueVersion.content }

        pom.uniqueVersion.attributes = empty

        pom.uniqueVersion.content = xsd:boolean >> a:defaultValue = 'true'
      }

      div {
        pom.deployment-repository.content &= pom.releases?
        pom.releases = element releases { pom.releases.attributes, pom.releases.content }

        pom.releases.attributes = empty

        pom.releases.content = pom.repository-policy.content
      }

      div {
        pom.deployment-repository.content &= pom.snapshots?
        pom.snapshots = element snapshots { pom.snapshots.attributes, pom.snapshots.content }

        pom.snapshots.attributes = empty

        pom.snapshots.content = pom.repository-policy.content
      }

      div {
        pom.deployment-repository.content &= pom.deployment-repository.content.id?
        pom.deployment-repository.content.id = pom.id
      }

      div {
        pom.deployment-repository.content &= pom.deployment-repository.content.name?
        pom.deploypment-repository.content.name = pom.name
      }

      div {
        pom.deployment-repository.content &= pom.deployment-repository.content.url?
        pom.deploypment-repository.content.url = pom.url
      }

      div {
        pom.deployment-repository.content &= pom.layout?
        pom.layout = element layout { pom.layout.attributes, pom.layout.content }

        pom.layout.attributes = empty

        pom.layout.content = text >> a:defaultValue = 'default'
      }

      div {
        pom.repository-policy.content = empty

        div {
          pom.repository-policy.content &= pom.enabled?
          pom.enabled = element enabled { pom.enabled.attributes, pom.enabled.content }

          pom.enabled.attributes = empty

          pom.enabled.content = text
        }

        div {
          pom.updatePolicy = element updatePolicy { pom.updatePolicy.attributes, pom.updatePolicy.content }

          pom.updatePolicy.attributes = empty

          pom.updatePolicy.content = text
        }

        div {
          pom.checksumPolicy = element checksumPolicy { pom.checksumPolicy.attributes, pom.checksumPolicy.content }

          pom.checksumPolicy.attributes = empty

          pom.checksumPolicy.content = text
        }
      }
    }
  }
}

div {
  pom.properties = element properties { pom.properties.attributes, pom.properties.content }

  pom.properties.attributes = empty

  pom.properties.content = pom.any.element*
}

div {
  pom.dependencyManagement = element dependencyManagement { pom.dependencyManagement.attributes, pom.dependencyManagement.content }

  pom.dependencyManagement.attributes = 

  pom.dependencyManagement.content = 
}

div {
  pom.dependencies = element dependencies { pom.dependencies.attributes, pom.dependencies.content }

  pom.dependencies.attributes = empty

  pom.dependencies.content = pom.dependency*
}

div {
  pom.repositories = element repositories { pom.repositories.attributes, pom.repositories.content }

  pom.repositories.attributes = empty

  pom.repositories.content = pom.repository*
}

div {
  pom.pluginRepositories = element pluginRepositories { pom.pluginRepositories.attributes, pom.pluginRepositories.content }

  pom.pluginRepositories.attributes = empty

  pom.pluginRepositories.content = pom.pluginRepository*
}

div {
  pom.build = element build { pom.build.attributes, pom.build.content }

  pom.build.attributes = 

  pom.build.content = 
}

div {
  pom.reports = element reports { pom.reports.attributes, pom.reports.content }

  pom.reports.attributes = empty

  pom.reports.content = pom.any.element*
}

div {
  pom.reporting = element reporting { pom.reporting.attributes, pom.reporting.content }

  pom.reporting.attributes = empty

  div {
    pom.reporting.content = empty

    div {
      pom.reporting.content &= pom.excludeDefaults?
      pom.excludeDefaults = element excludeDefaults { pom.excludeDefaults.attributes, pom.excludeDefaults.content }

      pom.excludeDefaults.attributes = empty

      pom.excludeDefaults.content = text
    }

    div {
      pom.reporting.content &= pom.outputDirectory?
      pom.outputDirectory = element outputDirectory { pom.outputDirectory.attributes, pom.outputDirectory.content }

      pom.outputDirectory.attributes = empty

      pom.outputDirectory.content = text
    }

    div {
      pom.reporting.content &= pom.reporting.content.plugins?
      pom.reporting.content.plugins = element plugins { pom.reporting.content.plugins.attributes, pom.reporting.content.plugins.content }

      pom.reporting.content.plugins.attributes = empty

      pom.reporting.content.plugins.content = pom.reporting.content.plugin*

      div {
        pom.reporting.content.pluigin = element plugin { pom.reporting.content.plugin.attributes, pom.reporting.content.plugin.content }

        pom.reporting.content.plugin.attributes = empty

        div {
          pom.reporting.content.plugin.content = empty

          div {
            pom.reporting.content.plugin.content &= pom.reporting.content.plugin.content.groupId?
            pom.reporting.content.plugin.content.groupId = pom.groupId?
          }

          div {
            pom.reporting.content.plugin.content &= pom.reporting.content.plugin.content.artifactId?
            pom.reporting.content.plugin.content.artifactId = pom.artifactId?
          }

          div {
            pom.reporting.content.plugin.content &= pom.reporting.content.plugin.content.version?
            pom.reporting.content.plugin.content.version = pom.version?
          }

          div {
            pom.reporting.content.plugin.content &= pom.reporting.content.plugin.content.groupId?
            pom.reporting.content.plugin.content.groupId = pom.groupId?
          }

          div {
            pom.reporting.content.plugin.content &= pom.reportSets?
            pom.reportSets = element reportSets { pom.reportSets.attributes, pom.reportSets.content }

            pom.reportSets.attributes = empty

            pom.reportSets.content = pom.reportSet*

            div {
              pom.reportSet = element reportSet { pom.reportSet.attributes, pom.reportSet.content }

              pom.reportSet.attributes = empty

              div {
                pom.reportSet.content = empty

                div {
                  pom.reportSet.content &= pom.reportSet.content.id?
                  pom.reportSet.content.id = pom.id
                }

                div {
                  pom.reportSet.content &= pom.reportSet.reports?
                  pom.reportSet.content.reports = element reports { pom.reportSet.content.reports.attributes, pom.reportSet.content.reports.content }

                  pom.reportSet.content.reports.attributes = empty

                  pom.reportSet.content.reports.content = pom.report*

                  div {
                    pom.report = element report { pom.report.attributes, pom.report.content }

                    pom.report.attributes = empty

                    pom.report.content = text
                  }
                }

                div {
                  pom.reportSet.content &= pom.reportSet.content.inherited?
                  pom.reportSet.content.inherited = pom.inherited
                }

                div {
                  pom.reportSet.content &= pom.reportSet.content.configuration?
                  pom.reportSet.content.configuration = pom.configuration
                }
              }
            }
          }

          div {
            pom.reporting.content.plugin.content &= pom.reporting.content.plugin.content.inherited?
            pom.reporting.content.plugin.content.inherited = pom.inherited
          }

          div {
            pom.reporting.content.plugin.content &= pom.reporting.content.plugin.content.configuration?
            pom.reporting.content.plugin.content.configuration = pom.configuration
          }
        }
      }
    }
  }
}

div {
  pom.profiles = element profiles { pom.profiles.attributes, pom.profiles.content }

  pom.profiles.attributes = empty

  pom.profiles.content = pom.profile*
}

# Shared

pom.attributes.child.site.url.inherit.append.path = attribute child.site.url.inherit.append.path { text }

div {
  pom.id = element id { pom.id.attributes, pom.id.content }

  pom.id.attributes = empty

  pom.id.content = text
}

div {
  pom.inherited = element inherited { pom.inherited.attributes, pom.inherited.content }

  pom.inherited.attributes = empty

  pom.inherited.content = text
}

div {
  pom.configuration = element configuration { pom.configuration.attributes, pom.configuration.content }

  pom.configuration.attributes = empty

  pom.configuration.content = pom.any.element*
}

div {
  pom.person-content = pom.properties?

  div {
    pom.person-content &= pom.person-content.id?
    pom.person-content.id = pom.id
  }

  div {
    pom.person-content &= pom.person-content.name?
    pom.person-content.name = pom.name
  }

  div {
    pom.person-content &= pom.email?
    pom.email = element email { pom.email.attributes, pom.email.content }

    pom.email.attributes = empty

    pom.email.content = text
  }

  div {
    pom.person-content &= pom.person-content.url?
    pom.person-content.url = pom.url
  }

  div {
    pom.person-content &= pom.person-content.organization?
    pom.person-content.organization = pom.organization
  }

  div {
    pom.person-content &= pom.organizationUrl?
    pom.organizationUrl = element organizationUrl { pom.organizationUrl.attributes, pom.organizationUrl.content }

    pom.organizationUrl.attributes = empty

    pom.organizationUrl.content = text
  }

  div {
    pom.person-content &= pom.roles?
    pom.roles = element roles { pom.roles.attributes, pom.roles.content }

    pom.roles.attributes = empty

    div {
      pom.roles.content = pom.role*

      div {
        pom.role = element role { pom.role.attributes, pom.role.content }

        pom.role.attributes = empty

        pom.role.content = text
      }
    }
  }

  div {
    pom.person-content &= pom.timezone?
    pom.timezone = element timezone { pom.timezone.attributes, pom.timezone.content }

    pom.timezone.attributes = empty

    pom.timezone.content = text
  }
}
