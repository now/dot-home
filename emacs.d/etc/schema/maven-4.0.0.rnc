namespace a = 'http://relaxng.org/ns/compatibility/annotations/1.0'
default namespace pom = 'http://maven.apache.org/POM/4.0.0'
namespace xsi = 'http://www.w3.org/2001/XMLSchema-instance'

pom.any.element = element * { (attribute * { text } | text | pom.any.element)* }

xsi.schemaLocation = attribute xsi:schemaLocation { text }

start = pom.project

div {
  pom.project = element project { pom.project.attributes, pom.project.content }

  div {
    pom.project.attributes = xsi.schemaLocation?

    div {
      pom.project.attributes &= pom.project.attributes.child.project.url.inherit.append.path?
      pom.project.attributes.child.project.url.inherit.append.path =
        attribute child.project.url.inherit.append.path { text }
    }
  }

  pom.project.content =
    pom.modelVersion? &
    pom.parent? &
    pom.groupId? &
    pom.artifactId? &
    pom.version? &
    pom.packaging? &
    pom.name? &
    pom.description? &
    pom.url? &
    pom.inceptionYear? &
    pom.organization? &
    pom.licenses? &
    pom.developers? &
    pom.contributors? &
    pom.mailingLists? &
    pom.prerequisites? &
    pom.modules? &
    pom.scm? &
    pom.issueManagement? &
    pom.ciManagement? &
    pom.distributionManagement? &
    pom.properties? &
    pom.dependencyManagement? &
    pom.dependencies? &
    pom.repositories? &
    pom.pluginRepositories? &
    pom.build? &
    pom.reports? &
    pom.reporting? &
    pom.profiles?
}

div {
  pom.modelVersion = element modelVersion { pom.modelVersion.attributes, pom.modelVersion.content }
  pom.modelVersion.attributes = empty
  pom.modelVersion.content = text
}

div {
  pom.parent = element parent { pom.parent.attributes, pom.parent.content }

  pom.parent.attributes = empty

  div {
    pom.parent.content = pom.groupId? & pom.artifactId? & pom.version?

    div {
      pom.parent.content &= pom.relativePath?
      pom.relativePath = element relativePath { pom.relativePath.attributes, pom.relativePath.content }
      pom.relativePath.attributes = empty
      pom.relativePath.content = text
    }
  }
}

div {
  pom.groupId = element groupId { pom.groupId.attributes, pom.groupId.content }
  pom.groupId.attributes = empty
  pom.groupId.content = text
}

div {
  pom.artifactId = element artifactId { pom.artifactId.attributes, pom.artifactId.content }
  pom.artifactId.attributes = empty
  pom.artifactId.content = text
}

div {
  pom.version = element version { pom.version.attributes, pom.version.content }
  pom.version.attributes = empty
  pom.version.content = text
}

div {
  pom.packaging = element packaging { pom.packaging.attributes, pom.packaging.content }
  pom.packaging.attributes = empty
  [a:defaultValue = 'jar']
  pom.packaging.content = text
}

div {
  pom.name = element name { pom.name.attributes, pom.name.content }
  pom.name.attributes = empty
  pom.name.content = text
}

div {
  pom.description = element description { pom.description.attributes, pom.description.content }
  pom.description.attributes = empty
  pom.description.content = text
}

div {
  pom.url = element url { pom.url.attributes, pom.url.content }
  pom.url.attributes = empty
  pom.url.content = text
}

div {
  pom.inceptionYear = element inceptionYear { pom.inceptionYear.attributes, pom.inceptionYear.content }
  pom.inceptionYear.attributes = empty
  pom.inceptionYear.content = text
}

div {
  pom.organization = element organization { pom.organization.attributes, pom.organization.content }

  pom.organization.attributes = empty

  div {
    pom.organization.content = empty

    div {
      pom.organization.content &= pom.organization.content.name?
      pom.organization.content.name = pom.name
    }

    div {
      pom.organization.content &= pom.organization.content.url?
      pom.organization.content.url = pom.url
    }
  }
}

div {
  pom.licenses = element licenses { pom.licenses.attributes, pom.licenses.content }
  pom.licenses.attributes = empty
  pom.licenses.content = pom.license*
}

div {
  pom.license = element license { pom.license.attributes, pom.license.content }

  pom.license.attributes = empty

  div {
    pom.license.content = empty

    div {
      pom.license.content &= pom.license.content.name?
      pom.license.content.name = pom.name
    }

    div {
      pom.license.content &= pom.license.content.url?
      pom.license.content.url = pom.url
    }

    div {
      pom.license.content &= pom.distribution?
      pom.distribution = element distribution { pom.distribution.attributes, pom.distribution.content }
      pom.distribution.attributes = empty
      pom.distribution.content = text
    }

    div {
      pom.license.content &= pom.comments?
      pom.comments = element comments { pom.comments.attributes, pom.comments.content }
      pom.comments.attributes = empty
      pom.comments.content = text
    }
  }
}

div {
  pom.developers = element developers { pom.developers.attributes, pom.developers.content }

  pom.developers.attributes = empty

  div {
    pom.developers.content = pom.developer*

    div {
      pom.developer = element developer { pom.developer.attributes, pom.developer.content }
      pom.developer.attributes = empty
      pom.developer.content = pom.person-content
    }
  }
}

div {
  pom.contributors = element contributors { pom.contributors.attributes, pom.contributors.content }

  pom.contributors.attributes = empty

  div {
    pom.contributors.content = pom.contributor*

    div {
      pom.contributor = element contributor { pom.contributor.attributes, pom.contributor.content }
      pom.contributor.attributes = empty
      pom.contributor.content = pom.person-content
    }
  }
}

div {
  pom.mailingLists = element mailingLists { pom.mailingLists.attributes, pom.mailingLists.content }

  pom.mailingLists.attributes = empty

  div {
    pom.mailingLists.content = pom.mailingList*

    div {
      pom.mailingList = element mailingList { pom.mailingList.attributes, pom.mailingList.content }

      pom.mailingList.attributes = empty

      div {
        pom.mailingList.content = empty

        div {
          pom.mailingList.content &= pom.mailingList.content.name?
          pom.mailingList.content.name = pom.name
        }

        div {
          pom.mailingList.content &= pom.subscribe?
          pom.subscribe = element subscribe { pom.subscribe.attributes, pom.subscribe.content }
          pom.subscribe.attributes = empty
          pom.subscribe.content = text
        }

        div {
          pom.mailingList.content &= pom.unsubscribe?
          pom.unsubscribe = element unsubscribe { pom.unsubscribe.attributes, pom.unsubscribe.content }
          pom.unsubscribe.attributes = empty
          pom.unsubscribe.content = text
        }

        div {
          pom.mailingList.content &= pom.post?
          pom.post = element post { pom.post.attributes, pom.post.content }
          pom.post.attributes = empty
          pom.post.content = text
        }

        div {
          pom.mailingList.content &= pom.archive?
          pom.archive = element archive { pom.archive.attributes, pom.archive.content }
          pom.archive.attributes = empty
          pom.archive.content = text
        }

        div {
          pom.otherArchives = element otherArchives { pom.otherArchives.attributes, pom.otherArchives.content }

          pom.otherArchives.attributes = empty

          div {
            pom.otherArchives.content = pom.otherArchive*

            div {
              pom.otherArchive = element otherArchive { pom.otherArchive.attributes, pom.otherArchive.content }
              pom.otherArchive.attributes = empty
              pom.otherArchive.content = text
            }
          }
        }
      }
    }
  }
}

div {
  pom.prerequisites = element prerequisites { pom.prerequisites.attributes, pom.prerequisites.content }

  pom.prerequisites.attributes = empty

  div {
    pom.prerequisites.content = empty

    div {
      pom.prerequisites.content &= pom.maven?
      pom.maven = element maven { pom.maven.attributes, pom.maven.content }
      pom.maven.attributes = empty
      [a:defaultValue = '2.0']
      pom.maven.content = text
    }
  }
}

div {
  pom.modules = element modules { pom.modules.attributes, pom.modules.content }

  pom.modules.attributes = empty

  div {
    pom.modules.content = pom.module*

    div {
      pom.module = element module { pom.module.attributes, pom.module.content }
      pom.module.attributes = empty
      pom.module.content = text
    }
  }
}

div {
  pom.scm = element scm { pom.scm.attributes, pom.scm.content }

  pom.scm.attributes = empty

  div {
    pom.scm.content = empty?

    div {
      pom.scm.content &= pom.scm.content.url?
      pom.scm.content.url = pom.url
    }

    div {
      pom.scm.content &= pom.connection?
      pom.connection = element connection { pom.connection.attributes, pom.connection.content }
      pom.connection.attributes = empty
      pom.connection.content = text
    }

    div {
      pom.scm.content &= pom.developerConnection?
      pom.developerConnection = element developerConnection { pom.developerConnection.attributes, pom.developerConnection.content }

      pom.developerConnection.attributes = empty

      pom.developerConnection.content = text
    }

    div {
      pom.scm.content &= pom.tag?
      pom.tag = element tag { pom.tag.attributes, pom.tag.content }
      pom.tag.attributes = empty
      [a:defaultValue = 'HEAD']
      pom.tag.content = text
    }
  }
}

div {
  pom.issueManagement = element issueManagement { pom.issueManagement.attributes, pom.issueManagement.content }

  pom.issueManagement.attributes = empty

  div {
    pom.issueManagement.content = empty

    div {
      pom.issueManagement.content &= pom.issueManagement.content.system?
      pom.issueManagement.content.system = pom.system
    }

    div {
      pom.issueManagement.content &= pom.issueManagement.content.url?
      pom.issueManagement.content.url = pom.url
    }
  }
}

div {
  pom.ciManagement = element ciManagement { pom.ciManagement.attributes, pom.ciManagement.content }

  pom.ciManagement.attributes = empty

  div {
    pom.ciManagement.content = empty

    div {
      pom.ciManagement.content &= pom.ciManagement.system?
      pom.ciManagement.system = pom.system?
    }

    div {
      pom.ciManagement.content &= pom.ciManagement.content.url?
      pom.ciManagement.content.url = pom.url
    }

    div {
      pom.ciManagement.content &= pom.notifiers?
      pom.notifiers = element notifiers { pom.notifiers.attributes, pom.notifiers.content }

      pom.notifiers.attributes = empty

      pom.notifiers.content = pom.notifier*

      div {
        pom.notifier = element notifier { pom.notifier.attributes, pom.notifier.content }

        pom.notifier.attributes = empty

        div {
          pom.notifier.content = empty

          div {
            pom.notifier.content &= pom.notifier.content.type?
            pom.notifier.content.type = element type { pom.notifier.content.type.attributes, pom.notifier.content.type.content }
            pom.notifier.content.type.attributes = empty
            pom.notifier.content.type.content = text
          }

          div {
            pom.notifier.content &= pom.sendOnError?
            pom.sendOnError = element sendOnError { pom.sendOnError.attributes, pom.sendOnError.content }
            pom.sendOnError.attributes = empty
            [a:defaultValue = 'true']
            pom.sendOnError.content = xsd:boolean
          }

          div {
            pom.notifier.content &= pom.sendOnFailure?
            pom.sendOnFailure = element sendOnFailure { pom.sendOnFailure.attributes, pom.sendOnFailure.content }
            pom.sendOnFailure.attributes = empty
            [a:defaultValue = 'true']
            pom.sendOnFailure.content = xsd:boolean
          }

          div {
            pom.notifier.content &= pom.sendOnSuccess?
            pom.sendOnSuccess = element sendOnSuccess { pom.sendOnSuccess.attributes, pom.sendOnSuccess.content }
            pom.sendOnSuccess.attributes = empty
            [a:defaultValue = 'true']
            pom.sendOnSuccess.content = xsd:boolean
          }

          div {
            pom.notifier.content &= pom.sendOnWarning?
            pom.sendOnWarning = element sendOnWarning { pom.sendOnWarning.attributes, pom.sendOnWarning.content }
            pom.sendOnWarning.attributes = empty
            [a:defaultValue = 'true']
            pom.sendOnWarning.content = xsd:boolean
          }

          div {
            pom.notifier.content &= pom.address?
            pom.address = element address { pom.address.attributes, pom.address.content }
            pom.address.attributes = empty
            pom.address.content = string
          }

          div {
            pom.notifier.content &= pom.notifier.content.configuration?
            pom.notifier.content.configuration = pom.configuration
          }
        }
      }
    }
  }
}

div {
  pom.distributionManagement = element distributionManagement { pom.distributionManagement.attributes, pom.distributionManagement.content }

  pom.distributionManagement.attributes = empty

  div {
    pom.distributionManagement.content = empty

    div {
      pom.distributionManagement.content &= pom.distributionManagement.content.repository?
      pom.distributionManagement.content.repository = element repository { pom.distributionManagement.content.repository.attributes, pom.distributionManagement.content.repository.content }
      pom.distributionManagement.content.repository.attributes = empty
      pom.distributionManagement.content.repository.content = pom.deployment-repository.content
    }

    div {
      pom.distributionManagement.content &= pom.distributionManagement.content.snapshotRepository?
      pom.distributionManagement.content.snapshotRepository = element snapshotRepository { pom.distributionManagement.content.snapshotRepository.attributes, pom.distributionManagement.content.snapshotRepository.content }
      pom.distributionManagement.content.snapshotRepository.attributes = empty
      pom.distributionManagement.content.snapshotRepository.content = pom.deployment-repository.content
    }

    div {
      pom.distributionManagement.content &= pom.site?
      pom.site = element site { pom.site.attributes, pom.site.content }

      pom.site.attributes = pom.attributes.child.site.url.inherit.append.path?

      div {
        pom.site.content = empty

        div {
          pom.site.content &= pom.site.content.id?
          pom.site.content.id = pom.id
        }

        div {
          pom.site.content &= pom.site.content.name?
          pom.site.content.name = pom.name
        }

        div {
          pom.site.content &= pom.site.content.url?
          pom.site.content.url = pom.url
        }
      }
    }

    div {
      pom.distributionManagement.content &= pom.downloadUrl?
      pom.downloadUrl = element downloadUrl { pom.downloadUrl.attributes, pom.downloadUrl.content }
      pom.downloadUrl.attributes = empty
      pom.downloadUrl.content = text
    }

    div {
      pom.distributionManagement.content &= pom.relocation?
      pom.relocation = element relocation { pom.relocation.attributes, pom.relocation.content }

      pom.relocation.attributes = empty

      div {
        pom.relocation.content =
          pom.groupId? & pom.artifactId? & pom.version?

        div {
          pom.relocation.content &= pom.message?
          pom.message = element message { pom.message.attributes, pom.message.content }
          pom.message.attributes = empty
          pom.message.content = text
        }
      }
    }

    div {
      pom.distributionManagement.content &= pom.status?
      pom.status = element status { pom.status.attributes, pom.status.content }
      pom.status.attributes = empty
      pom.status.content = text
    }

    div {
      pom.deployment-repository.content = empty

      div {
        pom.deployment-repository.content &= pom.uniqueVersion?
        pom.uniqueVersion = element uniqueVersion { pom.uniqueVersion.attributes, pom.uniqueVersion.content }
        pom.uniqueVersion.attributes = empty
        [a:defaultValue = 'true']
        pom.uniqueVersion.content = xsd:boolean
      }

      div {
        pom.deployment-repository.content &= pom.deployment-repository.content.releases?
        pom.deployment-repository.content.releases = pom.releases
      }

      div {
        pom.deployment-repository.content &= pom.deployment-repository.content.snapshots?
        pom.deployment-repository.content.snapshots = pom.snapshots
      }

      div {
        pom.deployment-repository.content &= pom.deployment-repository.content.id?
        pom.deployment-repository.content.id = pom.id
      }

      div {
        pom.deployment-repository.content &= pom.deployment-repository.content.name?
        pom.deployment-repository.content.name = pom.name
      }

      div {
        pom.deployment-repository.content &= pom.deployment-repository.content.url?
        pom.deployment-repository.content.url = pom.url
      }

      div {
        pom.deployment-repository.content &= pom.deployment-repository.content.layout?
        pom.deployment-repository.content.layout = pom.layout
      }
    }
  }
}

div {
  pom.properties = element properties { pom.properties.attributes, pom.properties.content }
  pom.properties.attributes = empty
  pom.properties.content = pom.any.element*
}

div {
  pom.dependencyManagement = element dependencyManagement { pom.dependencyManagement.attributes, pom.dependencyManagement.content }
  pom.dependencyManagement.attributes = empty
  pom.dependencyManagement.content = pom.dependencies?
}

div {
  pom.dependencies = element dependencies { pom.dependencies.attributes, pom.dependencies.content }

  pom.dependencies.attributes = empty

  div {
    pom.dependencies.content = pom.dependency*

    div {
      pom.dependency = element dependency { pom.dependency.attributes, pom.dependency.content }

      pom.dependency.attributes = empty

      div {
        pom.dependency.content = empty

        div {
          pom.dependency.content &= pom.dependency.content.groupId?
          pom.dependency.content.groupId = pom.groupId
        }

        div {
          pom.dependency.content &= pom.dependency.content.artifactId?
          pom.dependency.content.artifactId = pom.artifactId
        }

        div {
          pom.dependency.content &= pom.dependency.content.version?
          pom.dependency.content.version = pom.version
        }

        div {
          pom.dependency.content &= pom.dependency.content.type?
          pom.dependency.content.type = element type { pom.dependency.content.type.attributes, pom.dependency.content.type.content }
          pom.dependency.content.type.attributes = empty
          [a:defaultValue = "jar"]
          pom.dependency.content.type.content = text
        }

        div {
          pom.dependency.content &= pom.classifier?
          pom.classifier = element classifier { pom.classifier.attributes, pom.classifier.content }
          pom.classifier.attributes = empty
          pom.classifier.content = text
        }

        div {
          pom.dependency.content &= pom.scope?
          pom.scope = element scope { pom.scope.attributes, pom.scope.content }
          pom.scope.attributes = empty
          pom.scope.content = text
        }

        div {
          pom.dependency.content &= pom.systemPath?
          pom.systemPath = element systemPath { pom.systemPath.attributes, pom.systemPath.content }
          pom.systemPath.attributes = empty
          pom.systemPath.content = text
        }

        div {
          pom.dependency.content &= pom.exclusions?
          pom.exclusions = element exclusions { pom.exclusions.attributes, pom.exclusions.content }

          pom.exclusions.attributes = empty

          div {
            pom.exclusions.content = pom.exclusion*

            div {
              pom.exclusion = element exclusion { pom.exclusion.attributes, pom.exclusion.content }

              pom.exclusion.attributes = empty

              div {
                pom.exclusion.content &= pom.exclusion.content.groupId?
                pom.exclusion.content.groupId = pom.groupId
              }

              div {
                pom.exclusion.content &= pom.exclusion.content.artifactId?
                pom.exclusion.content.artifactId = pom.artifactId
              }
            }
          }
        }

        div {
          pom.dependency.content &= pom.optional?
          pom.optional = element optional { pom.optional.attributes, pom.optional.content }
          pom.optional.attributes = empty
          pom.optional.content = text
        }
      }
    }
  }
}

div {
  pom.repositories = element repositories { pom.repositories.attributes, pom.repositories.content }

  pom.repositories.attributes = empty

  div {
    pom.repositories.content = pom.repository*

    div {
      pom.repository = element repository { pom.repository.attributes, pom.repository.content }

      pom.repository.attributes = empty

      div {
        pom.repository.content = empty

        div {
          pom.repository.content &= pom.repository.content.releases?
          pom.repository.content.releases = pom.releases
        }

        div {
          pom.repository.content &= pom.repository.content.snapshots?
          pom.repository.content.snapshots = pom.snapshots
        }

        div {
          pom.repository.content &= pom.repository.content.id?
          pom.repository.content.id = pom.id
        }

        div {
          pom.repository.content &= pom.repository.content.name?
          pom.repository.content.name = pom.name
        }

        div {
          pom.repository.content &= pom.repository.content.layout?
          pom.repository.content.layout = pom.layout
        }
      }
    }
  }
}

div {
  pom.pluginRepositories = element pluginRepositories { pom.pluginRepositories.attributes, pom.pluginRepositories.content }

  pom.pluginRepositories.attributes = empty

  div {
    pom.pluginRepositories.content = pom.pluginRepository*

    div {
      pom.pluginRepository = pom.repository
    }
  }
}

div {
  pom.build = element build { pom.build.attributes, pom.build.content }

  pom.build.attributes = empty

  div {
    pom.build.content = empty

    div {
      pom.sourceDirectory = element sourceDirectory { pom.sourceDirectory.attributes, pom.sourceDirectory.content }
      pom.sourceDirectory.attributes = empty
      pom.sourceDirectory.content = text
    }

    div {
      pom.scriptSourceDirectory = element scriptSourceDirectory { pom.scriptSourceDirectory.attributes, pom.scriptSourceDirectory.content }
      pom.scriptSourceDirectory.attributes = empty
      pom.scriptSourceDirectory.content = text
    }

    div {
      pom.testSourceDirectory = element testSourceDirectory { pom.testSourceDirectory.attributes, pom.testSourceDirectory.content }
      pom.testSourceDirectory.attributes = empty
      pom.testSourceDirectory.content = text
    }

    div {
      pom.build.content &= pom.build.content.outputDirectory?
      pom.build.content.outputDirectory = pom.outputDirectory
    }

    div {
      pom.testOutputDirectory = element testOutputDirectory { pom.testOutputDirectory.attributes, pom.testOutputDirectory.content }
      pom.testOutputDirectory.attributes = empty
      pom.testOutputDirectory.content = text
    }

    div {
      pom.build.content &= pom.build.content.extensions?
      pom.build.content.extensions = element extensions { pom.build.content.extensions.attributes, pom.build.content.extensions.content }

      pom.build.content.extensions.attributes = empty

      div {
        pom.build.content.extensions.content = empty

        div {
          pom.build.content.extensions.content &= pom.build.content.extensions.content.groupId?
          pom.build.content.extensions.content.groupId = pom.groupId
        }

        div {
          pom.build.content.extensions.content &= pom.build.content.extensions.content.artifactId?
          pom.build.content.extensions.content.artifactId = pom.artifactId
        }

        div {
          pom.build.content.extensions.content &= pom.build.content.extensions.content.version?
          pom.build.content.extensions.content.version = pom.version
        }
      }
    }

    div {
      pom.build.content &= pom.build.content.defaultGoal?
      pom.build.content.defaultGoal = pom.defaultGoal
    }

    div {
      pom.build.content &= pom.build.content.resources?
      pom.build.content.resources = pom.resources
    }

    div {
      pom.build.content &= pom.build.content.testResources?
      pom.build.content.testResources = pom.testResources
    }

    div {
      pom.build.content &= pom.build.content.directory?
      pom.build.content.directory = pom.directory
    }

    div {
      pom.build.content &= pom.build.content.finalName?
      pom.build.content.finalName = pom.finalName
    }

    div {
      pom.build.content &= pom.build.content.filters?
      pom.build.content.filters = pom.filters
    }

    div {
      pom.build.content &= pom.build.content.pluginManagement?
      pom.build.content.pluginManagement = pom.pluginManagement
    }

    div {
      pom.build.content &= pom.build.content.plugins?
      pom.build.content.plugins = pom.plugins
    }
  }
}

div {
  pom.reports = element reports { pom.reports.attributes, pom.reports.content }
  pom.reports.attributes = empty
  pom.reports.content = pom.any.element*
}

div {
  pom.reporting = element reporting { pom.reporting.attributes, pom.reporting.content }

  pom.reporting.attributes = empty

  div {
    pom.reporting.content = empty

    div {
      pom.reporting.content &= pom.excludeDefaults?
      pom.excludeDefaults = element excludeDefaults { pom.excludeDefaults.attributes, pom.excludeDefaults.content }
      pom.excludeDefaults.attributes = empty
      pom.excludeDefaults.content = text
    }

    div {
      pom.reporting.content &= pom.reporting.content.outputDirectory?
      pom.reporting.content.outputDirectory = pom.outputDirectory
    }

    div {
      pom.reporting.content &= pom.reporting.content.plugins?
      pom.reporting.content.plugins = element plugins { pom.reporting.content.plugins.attributes, pom.reporting.content.plugins.content }

      pom.reporting.content.plugins.attributes = empty

      pom.reporting.content.plugins.content = pom.reporting.content.plugin*

      div {
        pom.reporting.content.plugin = element plugin { pom.reporting.content.plugin.attributes, pom.reporting.content.plugin.content }

        pom.reporting.content.plugin.attributes = empty

        div {
          pom.reporting.content.plugin.content = empty

          div {
            pom.reporting.content.plugin.content &= pom.reporting.content.plugin.content.groupId?
            pom.reporting.content.plugin.content.groupId = pom.groupId?
          }

          div {
            pom.reporting.content.plugin.content &= pom.reporting.content.plugin.content.artifactId?
            pom.reporting.content.plugin.content.artifactId = pom.artifactId?
          }

          div {
            pom.reporting.content.plugin.content &= pom.reporting.content.plugin.content.version?
            pom.reporting.content.plugin.content.version = pom.version?
          }

          div {
            pom.reporting.content.plugin.content &= pom.reportSets?
            pom.reportSets = element reportSets { pom.reportSets.attributes, pom.reportSets.content }

            pom.reportSets.attributes = empty

            pom.reportSets.content = pom.reportSet*

            div {
              pom.reportSet = element reportSet { pom.reportSet.attributes, pom.reportSet.content }

              pom.reportSet.attributes = empty

              div {
                pom.reportSet.content = empty

                div {
                  pom.reportSet.content &= pom.reportSet.content.id?
                  pom.reportSet.content.id = pom.id
                }

                div {
                  pom.reportSet.content &= pom.reportSet.content.reports?
                  pom.reportSet.content.reports = element reports { pom.reportSet.content.reports.attributes, pom.reportSet.content.reports.content }
                  pom.reportSet.content.reports.attributes = empty
                  pom.reportSet.content.reports.content = pom.report*

                  div {
                    pom.report = element report { pom.report.attributes, pom.report.content }
                    pom.report.attributes = empty
                    pom.report.content = text
                  }
                }

                div {
                  pom.reportSet.content &= pom.reportSet.content.inherited?
                  pom.reportSet.content.inherited = pom.inherited
                }

                div {
                  pom.reportSet.content &= pom.reportSet.content.configuration?
                  pom.reportSet.content.configuration = pom.configuration
                }
              }
            }
          }

          div {
            pom.reporting.content.plugin.content &= pom.reporting.content.plugin.content.inherited?
            pom.reporting.content.plugin.content.inherited = pom.inherited
          }

          div {
            pom.reporting.content.plugin.content &= pom.reporting.content.plugin.content.configuration?
            pom.reporting.content.plugin.content.configuration = pom.configuration
          }
        }
      }
    }
  }
}

div {
  pom.profiles = element profiles { pom.profiles.attributes, pom.profiles.content }

  pom.profiles.attributes = empty

  div {
    pom.profiles.content = pom.profile*

    div {
      pom.profile = element profile { pom.profile.attributes, pom.profile.content }

      pom.profile.attributes = empty

      div {
        pom.profile.content = empty

        [a:defaultValue = 'default']
        div {
          pom.profile.content &= pom.profile.content.id?
          pom.profile.content.id = pom.id?
        }

        div {
          pom.profile.content &= pom.activation?
          pom.activation = element activation { pom.activation.attributes, pom.activation.content }

          pom.activation.attributes = empty

          div {
            pom.activation.content = empty

            div {
              pom.activation.content &= pom.activeByDefault?
              pom.activeByDefault = element activeByDefault { pom.activeByDefault.attributes, pom.activeByDefault.content }
              pom.activeByDefault.attributes = empty
              [a:defaultValue = 'false']
              pom.activeByDefault.content = xsd:boolean
            }

            div {
              pom.activation.content &= pom.jdk?
              pom.jdk = element jdk { pom.jdk.attributes, pom.jdk.content }
              pom.jdk.attributes = empty
              pom.jdk.content = text
            }

            div {
              pom.activation.content &= pom.os?
              pom.os = element os { pom.os.attributes, pom.os.content }

              pom.os.attributes = empty

              div {
                pom.os.content = empty

                div {
                  pom.os.content &= pom.os.content.name?
                  pom.os.content.name = pom.name
                }

                div {
                  pom.family = element family { pom.family.attributes, pom.family.content }
                  pom.family.attributes = empty
                  pom.family.content = text
                }

                div {
                  pom.arch = element arch { pom.arch.attributes, pom.arch.content }
                  pom.arch.attributes = empty
                  pom.arch.content = text
                }

                div {
                  pom.os.content &= pom.os.content.version?
                  pom.os.content.version = pom.version
                }
              }
            }

            div {
              pom.activation.content &= pom.property?
              pom.property = element property { pom.property.attributes, pom.property.content }

              pom.property.attributes = empty

              div {
                pom.property.content = empty

                div {
                  pom.property.content &= pom.property.content.name?
                  pom.property.content.name = pom.name
                }

                div {
                  pom.property.content &= pom.value?
                  pom.value = element value { pom.value.attributes, pom.value.content }
                  pom.value.attributes = empty
                  pom.value.content = text
                }
              }
            }

            div {
              pom.activation.content &= pom.file?
              pom.file = element file { pom.file.attributes, pom.file.content }

              pom.file.attributes = empty

              div {
                pom.file.content = empty

                div {
                  pom.missing = element missing { pom.missing.attributes, pom.missing.content }
                  pom.missing.attributes = empty
                  pom.missing.content = text
                }

                div {
                  pom.exists = element exists { pom.exists.attributes, pom.exists.content }
                  pom.exists.attributes = empty
                  pom.exists.content = text
                }
              }
            }
          }
        }

        div {
          pom.profile.content &= pom.profile.content.build?
          pom.profile.content.build = element build { pom.profile.content.build.attributes, pom.profile.content.build.content }

          pom.profile.content.build.attributes = empty

          div {
            pom.profile.content.build.content = empty

            div {
              pom.profile.content.build.content &= pom.profile.content.build.content.defaultGoal?
              pom.profile.content.build.content.defaultGoal = pom.defaultGoal
            }

            div {
              pom.profile.content.build.content &= pom.profile.content.build.content.resources?
              pom.profile.content.build.content.resources = pom.resources
            }

            div {
              pom.profile.content.build.content &= pom.profile.content.build.content.testResources?
              pom.profile.content.build.content.testResources = pom.testResources
            }

            div {
              pom.profile.content.build.content &= pom.profile.content.build.content.directory?
              pom.profile.content.build.content.directory = pom.directory
            }

            div {
              pom.profile.content.build.content &= pom.profile.content.build.content.finalName?
              pom.profile.content.build.content.finalName = pom.finalName
            }

            div {
              pom.profile.content.build.content &= pom.profile.content.build.content.filters?
              pom.profile.content.build.content.filters = pom.filters
            }

            div {
              pom.profile.content.build.content &= pom.profile.content.build.content.pluginManagement?
              pom.profile.content.build.content.pluginManagement = pom.pluginManagement
            }

            div {
              pom.profile.content.build.content &= pom.profile.content.build.content.plugins?
              pom.profile.content.build.content.plugins = pom.plugins
            }
          }
        }

        div {
          pom.profile.content &= pom.profile.content.modules?
          pom.profile.content.modules = element modules { pom.profile.content.modules.attributes, pom.profile.content.modules.content }

          pom.profile.content.modules.attributes = empty

          div {
            pom.profile.content.modules.content = pom.profile.content.modules.content.module*

            div {
              # TODO Simplify and use pom.profile.content.module
              pom.profile.content.modules.content.module = pom.module
            }
          }
        }

        div {
          pom.profile.content &= pom.profile.content.distributionManagement?
          pom.profile.content.distributionManagement = pom.distributionManagement
        }

        div {
          pom.profile.content &= pom.profile.content.properties?
          pom.profile.content.properties = pom.properties
        }

        div {
          pom.profile.content &= pom.profile.content.dependencyManagement?
          pom.profile.content.dependencyManagement = pom.dependencyManagement
        }

        div {
          pom.profile.content &= pom.profile.content.dependencies?
          pom.profile.content.dependencies = pom.dependencies
        }

        div {
          pom.profile.content &= pom.profile.content.repositories?
          pom.profile.content.repositories = pom.repositories
        }

        div {
          pom.profile.content &= pom.profile.content.pluginRepositories?
          pom.profile.content.pluginRepositories = pom.pluginRepositories
        }

        div {
          pom.profile.content &= pom.profile.content.reporting?
          pom.profile.content.reporting = pom.reporting
        }
      }
    }
  }
}

# Shared

pom.attributes.child.site.url.inherit.append.path = attribute child.site.url.inherit.append.path { text }

div {
  pom.id = element id { pom.id.attributes, pom.id.content }
  pom.id.attributes = empty
  pom.id.content = text
}

div {
  pom.inherited = element inherited { pom.inherited.attributes, pom.inherited.content }
  pom.inherited.attributes = empty
  pom.inherited.content = text
}

div {
  pom.configuration = element configuration { pom.configuration.attributes, pom.configuration.content }

  div {
    pom.configuration.attributes = empty

    div {
      pom.configuration.attributes &= pom.configuration.attributes.combine.self?
      pom.configuration.attributes.combine.self = attribute combine.self { 'override' }?
    }
  }

  pom.configuration.content = pom.any.element*
}

div {
  pom.releases = element releases { pom.releases.attributes, pom.releases.content }
  pom.releases.attributes = empty
  pom.releases.content = pom.repository-policy.content
}

div {
  pom.snapshots = element snapshots { pom.snapshots.attributes, pom.snapshots.content }
  pom.snapshots.attributes = empty
  pom.snapshots.content = pom.repository-policy.content
}

div {
  pom.layout = element layout { pom.layout.attributes, pom.layout.content }
  pom.layout.attributes = empty
  [a:defaultValue = 'default']
  pom.layout.content = text
}

div {
  pom.directory = element directory { pom.directory.attributes, pom.directory.content }
  pom.directory.attributes = empty
  pom.directory.content = text
}

div {
  pom.repository-policy.content = empty

  div {
    pom.repository-policy.content &= pom.enabled?
    pom.enabled = element enabled { pom.enabled.attributes, pom.enabled.content }
    pom.enabled.attributes = empty
    pom.enabled.content = text
  }

  div {
    pom.repository-policy.content &= pom.updatePolicy?
    pom.updatePolicy = element updatePolicy { pom.updatePolicy.attributes, pom.updatePolicy.content }
    pom.updatePolicy.attributes = empty
    pom.updatePolicy.content = text
  }

  div {
    pom.repository-policy.content &= pom.checksumPolicy?
    pom.checksumPolicy = element checksumPolicy { pom.checksumPolicy.attributes, pom.checksumPolicy.content }
    pom.checksumPolicy.attributes = empty
    pom.checksumPolicy.content = text
  }
}

div {
  pom.pluginManagement = element pluginManagement { pom.pluginManagement.attributes, pom.pluginManagement.content }

  pom.pluginManagement.attributes = empty

  div {
    pom.pluginManagement.content = pom.plugins*

    div {
      pom.plugins = element plugins { pom.plugins.attributes, pom.plugins.content }

      pom.plugins.attributes = empty

      div {
        pom.plugins.content = pom.plugin*

        div {
          pom.plugin = element plugin { pom.plugin.attributes, pom.plugin.content }

          pom.plugin.attributes = empty

          div {
            pom.plugin.content = empty

            div {
              pom.plugin.content &= pom.plugin.content.groupId?
              pom.plugin.content.groupId = pom.groupId
            }

            div {
              pom.plugin.content &= pom.plugin.content.artifactId?
              pom.plugin.content.artifactId = pom.artifactId
            }

            div {
              pom.plugin.content &= pom.plugin.content.version?
              pom.plugin.content.version = pom.version
            }

            div {
              pom.plugin.content &= pom.plugin.content.extensions?
              pom.plugin.content.extensions = element extensions { pom.plugin.content.extensions.attributes, pom.plugin.content.extensions.content }
              pom.plugin.content.extensions.attributes = empty
              pom.plugin.content.extensions.content = text
            }

            div {
              pom.plugin.content &= pom.executions?
              pom.executions = element executions { pom.executions.attributes, pom.executions.content }

              pom.executions.attributes = empty

              div {
                pom.executions.content = pom.execution*

                div {
                  pom.execution = element execution { pom.execution.attributes, pom.execution.content }

                  pom.execution.attributes = empty

                  div {
                    pom.execution.content = empty

                    div {
                      pom.execution.content &= pom.execution.content.id?
                      pom.execution.content.id = pom.id
                    }

                    div {
                      pom.execution.content &= pom.phase?
                      pom.phase = element phase { pom.phase.attributes, pom.phase.content }
                      pom.phase.attributes = empty
                      pom.phase.content = text
                    }

                    div {
                      pom.execution.content &= pom.goals?
                      pom.goals = element goals { pom.goals.attributes, pom.goals.content }

                      pom.goals.attributes = empty

                      div {
                        pom.goals.content = pom.goal*

                        div {
                          pom.goal = element goal { pom.goal.attributes, pom.goal.content }
                          pom.goal.attributes = empty
                          pom.goal.content = text
                        }
                      }
                    }

                    div {
                      pom.execution.content &= pom.execution.content.inherited?
                      pom.execution.content.inherited = pom.inherited
                    }

                    div {
                      pom.execution.content &= pom.execution.content.configuration?
                      pom.execution.content.configuration = pom.configuration
                    }
                  }
                }
              }
            }

            div {
              pom.plugin.content &= pom.plugin.content.dependencies?
              pom.plugin.content.dependencies = pom.dependencies
            }

            div {
              pom.plugin.content &= pom.plugin.content.inherited?
              pom.plugin.content.inherited = pom.inherited
            }

            div {
              pom.plugin.content &= pom.plugin.content.configuration?
              pom.plugin.content.configuration = pom.configuration
            }
          }
        }
      }
    }
  }
}

div {
  pom.defaultGoal = element defaultGoal { pom.defaultGoal.attributes, pom.defaultGoal.content }
  pom.defaultGoal.attributes = empty
  pom.defaultGoal.content = text
}

div {
  div {
    pom.resources = element resources { pom.resources.attributes, pom.resources.content }

    pom.resources.attributes = empty

    div {
      pom.resources.content = pom.resource*

      div {
        pom.resource = element resource { pom.resource.attributes, pom.resource.content }
        pom.resource.attributes = empty
        pom.resource.content = pom.resource-type.content
      }
    }
  }

  div {
    pom.testResources = element testResources { pom.testResources.attributes, pom.testResources.content }

    pom.testResources.attributes = empty

    div {
      pom.testResources.content = pom.testResource*

      div {
        pom.testResource = element testResource { pom.testResource.attributes, pom.testResource.content }
        pom.testResource.attributes = empty
        pom.testResource.content = pom.resource-type.content
      }
    }
  }

  div {
    pom.resource-type.content = empty

    div {
      pom.resource-type.content &= pom.targetPath?
      pom.targetPath = element targetPath { pom.targetPath.attributes, pom.targetPath.content }
      pom.targetPath.attributes = empty
      pom.targetPath.content = text
    }

    div {
      pom.resource-type.content &= pom.filtering?
      pom.filtering = element filtering { pom.filtering.attributes, pom.filtering.content }
      pom.filtering.attributes = empty
      pom.filtering.content = text
    }

    div {
      pom.resource-type.content &= pom.resource-type.content.directory?
      pom.resource-type.content.directory = pom.directory
    }

    div {
      pom.resource-type.content &= pom.includes?
      pom.includes = element includes { pom.includes.attributes, pom.includes.content }

      pom.includes.attributes = empty

      div {
        pom.includes.content = pom.include*

        div {
          pom.include = element include { pom.include.attributes, pom.include.content }
          pom.include.attributes = empty
          pom.include.content = text
        }
      }
    }

    div {
      pom.resource-type.content &= pom.excludes?
      pom.excludes = element excludes { pom.excludes.attributes, pom.excludes.content }

      pom.excludes.attributes = empty

      div {
        pom.excludes.content = pom.exclude*

        div {
          pom.exclude = element exclude { pom.exclude.attributes, pom.exclude.content }
          pom.exclude.attributes = empty
          pom.exclude.content = text
        }
      }
    }
  }
}

div {
  pom.finalName = element finalName { pom.finalName.attributes, pom.finalName.content }
  pom.finalName.attributes = empty
  pom.finalName.content = text
}

div {
  pom.filters = element filters { pom.filters.attributes, pom.filters.content }

  pom.filters.attributes = empty

  div {
    pom.filters.content = pom.filter*

    div {
      pom.filter = element filter { pom.filter.attributes, pom.filter.content }
      pom.filter.attributes = empty
      pom.filter.content = text
    }
  }
}

div {
  pom.system = element system { pom.system.attributes, pom.system.content }
  pom.system.attributes = empty
  pom.system.content = text
}

div {
  pom.outputDirectory = element outputDirectory {
    pom.outputDirectory.attributes, pom.outputDirectory.content
  }
  pom.outputDirectory.attributes = empty
  pom.outputDirectory.content = text
}

div {
  pom.person-content = pom.properties?

  div {
    pom.person-content &= pom.person-content.id?
    pom.person-content.id = pom.id
  }

  div {
    pom.person-content &= pom.person-content.name?
    pom.person-content.name = pom.name
  }

  div {
    pom.person-content &= pom.email?
    pom.email = element email { pom.email.attributes, pom.email.content }
    pom.email.attributes = empty
    pom.email.content = text
  }

  div {
    pom.person-content &= pom.person-content.url?
    pom.person-content.url = pom.url
  }

  div {
    pom.person-content &= pom.person-content.organization?
    pom.person-content.organization = element organization {
      pom.person-content.organization.attributes,
      pom.person-content.organization.content
    }
    pom.person-content.attributes = empty
    pom.person-content.content = text
  }

  div {
    pom.person-content &= pom.organizationUrl?
    pom.organizationUrl = element organizationUrl { pom.organizationUrl.attributes, pom.organizationUrl.content }
    pom.organizationUrl.attributes = empty
    pom.organizationUrl.content = text
  }

  div {
    pom.person-content &= pom.roles?
    pom.roles = element roles { pom.roles.attributes, pom.roles.content }

    pom.roles.attributes = empty

    div {
      pom.roles.content = pom.role*

      div {
        pom.role = element role { pom.role.attributes, pom.role.content }
        pom.role.attributes = empty
        pom.role.content = text
      }
    }
  }

  div {
    pom.person-content &= pom.timezone?
    pom.timezone = element timezone { pom.timezone.attributes, pom.timezone.content }
    pom.timezone.attributes = empty
    pom.timezone.content = text
  }
}
