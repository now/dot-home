# Prepare path to cache.

emulate -L zsh

local opt
integer create=0 verify=0

while getopts "cv" opt; do
  case $opt in
    (c) (( create = 1 )) ;;
    (v) (( verify = 1 )) ;;
  esac
done
shift $(( OPTIND - 1 ))

local context="$1" ident="$2"

# If the cache is disabled, we never want to rebuild it, so pretend
# itâ€™s valid.
zstyle -T $context use-cache || return 1

zstyle -s $context cache-path cache_path
: ${cache_path:=${XDG_CACHE_HOME:-$HOME/.cache}/zsh}

if (( create || verify )); then
  if [[ ! -d $cache_path ]]; then
    if [[ -e $cache_path ]]; then
      print -u 2 "cache-path style points to a non-directory: $cache_path"
      return 1
    else
      if (( create )); then
        (zmodload zsh/files 2>/dev/null; mkdir -p $cache_path)
        if [[ ! -d $_cache_dir ]]; then
          print -u 2 "couldn't create cache-path $cache_path"
          return 1
        fi
      fi
    fi
  fi
fi

if (( create )); then
  local cache_ident_path=${${:-"$cache_path/$ident"}:h}

  if [[ ! -d $cache_ident_path ]]; then
    if [[ -e $cache_ident_path ]]; then
      print -u 2 "cache ident path points to a non-directory"
      return 1
    else
      (zmodload zsh/files 2>/dev/null; mkdir -p $cache_ident_path)
      if [[ ! -d $_cache_ident_path ]]; then
        print -u 2 "couldn't create cache-ident_dir $cache_ident_path"
        return 1
      fi
    fi
  fi
fi

cache_path=$cache_path/$ident
