# contents: d command.
#
# Copyright © 2007 Nikolai Weibull

emulate -L zsh
setopt extendedglob

zmodload -i zsh/mathfunc
zmodload -i zsh/parameter
zmodload -i zsh/terminfo

autoload -U zap/path/common-prefix
autoload -U zap/format/columns

if (( $# > 0)); then
  cd ~-$1
  return $status
fi

declare -A colors
colors=(new "$(echoti setaf 12)" old "$(echoti setaf 7)")

declare -aU actual_dirs dirs
for dir in ${dirstack:#$PWD}; do
  [[ -d $dir ]] && actual_dirs+=$dir
done
dirs=(${(ps:\0:)"$(print -DN $actual_dirs)"})

(( $#dirs == 0 )) && return 1

local dir= previous_dir=
declare -a display
for dir in $dirs; do
  local prefix= suffix=
  prefix="$(zap/path/common-prefix ${previous_dir:-""} $dir)"
  suffix=$dir[$#prefix+1,-1]

  if (( $#suffix == 0 )); then
    # Highlight the last path component if the directory is a parent of the
    # previously listed one.
    suffix=$prefix:t
    prefix=$prefix:h/
  elif [[ $#suffix > 1 && $suffix[1] == / ]]; then
    # A leading slash is considered part of the prefix, unless SUFFIX is the
    # root directory.
    suffix[1]=
    prefix+=/
  fi

  # PREFIX can equal “./” if DIR is “~”, as $dir:h will be “.”.
  if (( $#prefix == 0 || $#suffix == 0 )) || [[ $prefix == ./ ]]; then
    display+="%{$colors[new]%}${dir//\%/%%}%{$reset_color%}"
  else
    display+="%{$colors[old]%}${prefix//\%/%%}%{$reset_color$colors[new]%}${suffix//\%/%%}%{$reset_color%}"
  fi

  previous_dir=$dir
done

integer num width=${#${#dirs}}
zap/format/columns -P ${display/(#m)/${(l.$width..0.):-$((++num))}. $MATCH}

dir=
print -n -- 'Jump to directory: '
for (( i = 0; i < $width; i++ )); do
  read -k char || return
  [[ $char != [[:digit:]] ]] && break
  dir+=$char
done
(( #char != 0x0a && #char != 0x0d )) && print

[[ -n $actual_dirs[dir] ]] && cd $actual_dirs[dir]
