#! /bin/zsh
# contents: Mailing list thread filter.
# arch-tag: e7533dde-fa9f-4984-a8f1-d1a68e57590e 
#
# Copyright Â© 2004 Nikolai Weibull <source@pcppopper.org>
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA



print -- --- $1 --- >> ~/tmp/thread.log
date +%Y-%m-%d\ %H:%M:%S.%N >> ~/tmp/thread.log

emulate -L zsh
setopt extendedglob

cache=~/.local/var/cache/msgids/boring-messages.cache

#build-score () {
#  print -r -- $1 | sed \
#   's/\\/\\\\\\\\\\\\\\\\/g;s/[$]/\\\\\\\\\\\\&/g;s/[].[?*+{}()|^]/\\\\\\\\&/g;s/["`]/\\\\\\&/g;s/'\''/\\&/g;s/^\([Rr][eE]:[[:space:]]*\)\?\(\\\\\\\\\[[^]]*\\\\\\\\\][[:space:]]*\)\([Rr][eE]:[[:space:]]*\)\?/\2([Rr][eE]:[[:space:]]*)*/;s/^.*/score "(~N | ~D) ~s \\"&\\"" =0/'
#}

update_score () {
  subject=${$(formail -c -x Subject)##[[:space:]]#}
  print -r -- Subject: $subject >> ~/tmp/thread.log
  #score="score \"(~N | ~D) =s \\\"${${subject//\\/\\\\\\\\}//(#m)([\"\`])/\\\\\\$MATCH}\\\"\""
  score="score \"=s \\\"${${subject//\\/\\\\\\\\}//(#m)([\"\`])/\\\\\\$MATCH}\\\"\""
  line=$(fgrep --line-number --max-count 1 --regexp $score $cache)
  if (( $? == 0 )); then
    line=$(echo $line | cut -d: -f1)
    if [[ $1 == \=* ]]; then
      new_score=$1
    else
      current_score=$(sed -n $line's/^.*\([=+-][0-9]\+\)$/\1/p' < $cache)
      case $current_score in
        \=*)
          new_score=$1
          ;;
        *)
          new_score=$(( current_score + $1 ))
          ;;
      esac
      new_score=$(printf "%+d" $new_score)
    fi
    print $line's/^\\(.*\\)[=+-][0-9]\\+$/\\1'$new_score'/\nm0\nw\nq' | ed -s $cache
  else
    cat =(print -r -- $score $1 ; head --lines 749 < $cache) > $cache
  fi
}

case $1 in
  increase)
    update_score +10
    ;;
  decrease)
    update_score -10
    ;;
  add|kill)
    update_score \=0
    ;;
  score|rescore)
    print -r "source $cache"
    ;;
esac

date +%Y-%m-%d\ %H:%M:%S.%N >> ~/tmp/thread.log


# vim: set sts=2 sw=2:
